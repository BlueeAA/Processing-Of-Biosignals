#include <Arduino.h>
#include "Antirrebotes.h"

const int16_t ABP[1250] PROGMEM = {-106,	-103,	-96,	-83,	-64,	-42,	-19,	5,	29,	51,	69,	82,	89,	91,	88,	83,	75,	66,	56,	46,	37,	28,	20,	12,	4,	-3,	-11,	-18,	-26,	-33,	-40,	-47,	-52,	-57,	-60,	-63,	-65,	-66,	-66,	-66,	-65,	-64,	-62,	-61,	-59,	-58,	-57,	-56,	-56,	-56,	-56,	-57,	-58,	-60,	-61,	-63,	-64,	-66,	-68,	-70,	-72,	-74,	-76,	-78,	-79,	-81,	-83,	-85,	-86,	-88,	-89,	-91,	-92,	-94,	-95,	-97,	-98,	-99,	-100,	-101,	-102,	-103,	-104,	-105,	-106,	-107,	-108,	-109,	-110,	-111,	-112,	-113,	-114,	-114,	-113,	-109,	-100,	-86,	-66,	-44,	-21,	2,	25,	46,	62,	73,	78,	78,	75,	68,	60,	51,	41,	31,	22,	13,	4,	-5,	-13,	-21,	-28,	-36,	-44,	-52,	-58,	-64,	-68,	-72,	-74,	-76,	-77,	-78,	-77,	-77,	-75,	-74,	-72,	-70,	-68,	-67,	-66,	-65,	-64,	-64,	-65,	-66,	-67,	-68,	-69,	-71,	-73,	-74,	-76,	-78,	-79,	-81,	-83,	-85,	-86,	-88,	-90,	-91,	-93,	-94,	-96,	-97,	-99,	-100,	-101,	-102,	-103,	-104,	-105,	-106,	-106,	-107,	-108,	-108,	-109,	-109,	-110,	-111,	-112,	-112,	-113,	-114,	-114,	-113,	-109,	-101,	-88,	-71,	-51,	-30,	-9,	12,	30,	45,	55,	59,	59,	56,	50,	42,	32,	23,	13,	2,	-8,	-17,	-26,	-35,	-43,	-51,	-58,	-66,	-71,	-76,	-79,	-82,	-83,	-84,	-85,	-84,	-84,	-83,	-82,	-80,	-79,	-77,	-75,	-74,	-73,	-72,	-72,	-72,	-72,	-73,	-74,	-75,	-76,	-77,	-79,	-80,	-82,	-83,	-85,	-87,	-88,	-90,	-91,	-93,	-95,	-96,	-98,	-99,	-100,	-102,	-103,	-104,	-105,	-106,	-107,	-108,	-109,	-110,	-110,	-111,	-111,	-112,	-112,	-113,	-113,	-114,	-114,	-115,	-116,	-116,	-117,	-115,	-110,	-100,	-84,	-62,	-39,	-15,	8,	31,	52,	67,	77,	82,	81,	77,	71,	63,	54,	44,	35,	26,	17,	9,	1,	-6,	-14,	-21,	-28,	-35,	-42,	-49,	-55,	-60,	-64,	-67,	-69,	-71,	-71,	-72,	-71,	-71,	-70,	-68,	-67,	-65,	-64,	-63,	-62,	-61,	-62,	-62,	-63,	-64,	-65,	-66,	-68,	-69,	-71,	-73,	-75,	-77,	-79,	-80,	-82,	-84,	-85,	-87,	-89,	-90,	-92,	-93,	-94,	-96,	-97,	-98,	-99,	-100,	-101,	-102,	-103,	-103,	-104,	-104,	-105,	-105,	-106,	-106,	-107,	-108,	-108,	-109,	-110,	-110,	-109,	-104,	-95,	-80,	-59,	-36,	-12,	11,	34,	55,	70,	80,	85,	84,	80,	73,	65,	56,	46,	36,	27,	18,	10,	2,	-5,	-13,	-20,	-27,	-35,	-42,	-49,	-55,	-60,	-63,	-66,	-68,	-69,	-70,	-70,	-69,	-68,	-67,	-65,	-64,	-62,	-61,	-60,	-59,	-59,	-59,	-60,	-60,	-62,	-63,	-65,	-66,	-68,	-70,	-72,	-74,	-76,	-77,	-79,	-81,	-83,	-84,	-86,	-88,	-89,	-91,	-92,	-94,	-95,	-96,	-98,	-99,	-100,	-100,	-101,	-102,	-103,	-103,	-104,	-104,	-105,	-105,	-106,	-106,	-107,	-108,	-108,	-109,	-110,	-109,	-107,	-100,	-87,	-70,	-48,	-25,	-3,	20,	41,	58,	69,	76,	77,	74,	68,	60,	51,	41,	31,	21,	11,	3,	-6,	-14,	-22,	-29,	-37,	-45,	-52,	-59,	-65,	-69,	-73,	-76,	-78,	-79,	-80,	-80,	-79,	-78,	-77,	-75,	-73,	-72,	-70,	-69,	-68,	-68,	-68,	-68,	-69,	-70,	-71,	-72,	-74,	-76,	-78,	-80,	-81,	-83,	-85,	-87,	-88,	-90,	-92,	-93,	-95,	-96,	-98,	-99,	-100,	-102,	-103,	-104,	-105,	-106,	-107,	-108,	-109,	-109,	-110,	-110,	-111,	-111,	-112,	-112,	-113,	-114,	-114,	-115,	-116,	-116,	-117,	-116,	-112,	-104,	-92,	-74,	-55,	-34,	-13,	8,	26,	41,	51,	56,	57,	53,	47,	38,	29,	19,	8,	-2,	-11,	-21,	-29,	-38,	-46,	-54,	-62,	-68,	-74,	-78,	-81,	-84,	-86,	-87,	-87,	-87,	-86,	-85,	-83,	-82,	-79,	-77,	-76,	-74,	-72,	-71,	-70,	-70,	-70,	-70,	-71,	-72,	-73,	-74,	-76,	-77,	-79,	-80,	-82,	-84,	-85,	-87,	-89,	-91,	-92,	-94,	-95,	-97,	-99,	-100,	-101,	-102,	-103,	-105,	-106,	-106,	-107,	-108,	-109,	-109,	-110,	-111,	-111,	-112,	-112,	-113,	-114,	-115,	-115,	-114,	-110,	-100,	-86,	-66,	-44,	-21,	2,	24,	43,	59,	69,	73,	73,	70,	64,	56,	47,	37,	28,	19,	10,	2,	-6,	-13,	-21,	-28,	-36,	-43,	-50,	-57,	-62,	-67,	-70,	-73,	-74,	-76,	-76,	-76,	-76,	-75,	-73,	-72,	-71,	-69,	-68,	-67,	-66,	-66,	-66,	-66,	-67,	-67,	-68,	-70,	-71,	-73,	-75,	-76,	-78,	-80,	-82,	-83,	-85,	-87,	-88,	-90,	-91,	-93,	-94,	-96,	-97,	-98,	-99,	-100,	-102,	-103,	-103,	-104,	-105,	-105,	-106,	-106,	-107,	-108,	-108,	-109,	-109,	-110,	-111,	-111,	-110,	-106,	-98,	-83,	-62,	-39,	-16,	8,	32,	53,	69,	80,	85,	85,	81,	75,	67,	58,	48,	39,	29,	21,	13,	5,	-3,	-10,	-17,	-25,	-32,	-40,	-47,	-53,	-58,	-62,	-65,	-68,	-69,	-70,	-70,	-69,	-68,	-67,	-66,	-64,	-63,	-62,	-61,	-60,	-60,	-60,	-60,	-61,	-62,	-63,	-64,	-66,	-67,	-69,	-71,	-73,	-74,	-76,	-78,	-80,	-82,	-83,	-85,	-87,	-88,	-90,	-91,	-93,	-94,	-95,	-96,	-97,	-98,	-99,	-100,	-100,	-101,	-102,	-102,	-103,	-103,	-104,	-105,	-105,	-106,	-107,	-108,	-108,	-105,	-98,	-86,	-68,	-47,	-24,	-1,	22,	43,	61,	73,	80,	81,	79,	73,	66,	57,	47,	38,	28,	19,	11,	3,	-5,	-13,	-20,	-28,	-36,	-43,	-50,	-55,	-60,	-64,	-67,	-69,	-70,	-71,	-71,	-71,	-70,	-69,	-68,	-66,	-65,	-64,	-63,	-63,	-63,	-63,	-64,	-65,	-66,	-68,	-70,	-71,	-73,	-75,	-77,	-79,	-80,	-82,	-84,	-86,	-87,	-89,	-90,	-92,	-94,	-95,	-96,	-98,	-99,	-100,	-101,	-102,	-103,	-104,	-105,	-106,	-107,	-107,	-108,	-109,	-109,	-110,	-111,	-112,	-112,	-114,	-114,	-115,	-114,	-111,	-103,	-90,	-73,	-52,	-30,	-8,	14,	34,	50,	61,	67,	68,	65,	59,	50,	42,	32,	22,	12,	3,	-6,	-15,	-23,	-31,	-39,	-47,	-54,	-61,	-67,	-72,	-75,	-78,	-80,	-82,	-83,	-83,	-83,	-82,	-80,	-79,	-77,	-76,	-74,	-73,	-72,	-71,	-71,	-71,	-71,	-72,	-73,	-74,	-75,	-76,	-78,	-79,	-80,	-82,	-84,	-85,	-87,	-89,	-90,	-91,	-93,	-94,	-96,	-97,	-98,	-99,	-100,	-101,	-102,	-103,	-104,	-105,	-106,	-107,	-108,	-108,	-109,	-109,	-109,	-108,	-103,	-95,	-83,	-66,	-47,	-27,	-8,	11,	28,	41,	49,	53,	52,	49,	43,	35,	26,	16,	6,	-4,	-14,	-23,	-32,	-40,	-49,	-57,	-64,	-70,	-75,	-79,	-82,	-84,	-86,	-87,	-87,	-87,	-86,	-86,	-84,	-83,	-82,	-80,	-79,	-78,	-77,	-76,	-76,	-76,	-76,	-77,	-78,	-79,	-80,	-81,	-83,	-84,	-85,	-87,	-88,	-90,	-91,	-92,	-94,	-95,	-97,	-98,	-100,	-101,	-102,	-103,	-105,	-106,	-107,	-108,	-109,	-110,	-111,	-112,	-113,	-114,	-114,	-115,	-115,	-115,	-116,	-116,	-116,	-116,	-117,	-117,	-118,	-118,	-119,	-119,	-120,	-119,	-114,	-105,	-88,	-66,	-42,	-18,	7,	31,	52,	69,	79,	84,	84,	80,	73,	64,	55,	45,	36,	26,	18,	10,	2,	-6,	-13,	-21,	-28,	-36,	-43,	-50,	-56,	-61,	-65,	-68,	-70,	-72,	-73,	-73,	-73,	-72,	-71,	-70,	-68,	-67,	-65,	-64,	-63,	-63,	-63,	-63,	-63,	-64,	-65,	-66,	-68,	-69,	-71,	-73,	-74,	-76,	-78,	-79,	-81,	-83,	-85,	-86,	-88,	-90,	-91,	-93,	-94,	-95,	-96,	-98,	-99,	-100,	-101,	-102,	-102,	-103,	-104,	-104,	-105,	-105,	-106,	-106,	-107,	-108,	-109,	-110,	-110,	-110,	-107,	-100,	-87,	-69,	-47,	-24,	-1,	22,	43,	61,	73,	80,	82,	79,	74,	66,	58,	48,	39,	30,	21,	12,	4,	-3,	-11,	-18,	-26,	-33,	-41,	-48,	-54,	-60,	-64,	-67,	-70,	-71,	-72,	-72,	-72,	-71,	-70,	-69,	-67,	-66,	-64,	-63,	-62,	-62,	-62,	-62,	-63,	-63,	-64,
};

const uint8_t Arritmia[2580] PROGMEM = {194,	192,	192,	196,	195,	193,	194,	198,	197,	198,	199,	201,	202,	199,	200,	200,	198,	193,	191,	191,	192,	192,	191,	190,	189,	189,	188,	188,	189,	190,	191,	190,	189,	190,	189,	186,	184,	187,	187,	186,	187,	188,	187,	186,	185,	185,	186,	186,	184,	184,	183,	184,	185,	186,	186,	187,	191,	186,	182,	184,	186,	187,	190,	189,	188,	189,	185,	186,	187,	189,	192,	189,	186,	187,	189,	192,	191,	187,	189,	192,	188,	190,	198,	200,	197,	194,	194,	196,	197,	193,	192,	191,	189,	190,	189,	186,	186,	187,	187,	189,	190,	188,	188,	184,	183,	185,	186,	183,	181,	179,	178,	185,	193,	207,	222,	236,	245,	240,	222,	204,	200,	199,	195,	191,	193,	191,	190,	187,	183,	185,	184,	185,	186,	185,	187,	187,	188,	186,	186,	188,	187,	185,	183,	185,	188,	187,	188,	187,	183,	185,	188,	188,	190,	190,	188,	187,	189,	188,	187,	187,	188,	188,	190,	190,	193,	193,	193,	194,	194,	194,	197,	197,	198,	201,	203,	201,	199,	199,	199,	199,	199,	197,	194,	192,	192,	192,	191,	190,	190,	189,	191,	191,	188,	187,	189,	187,	188,	189,	187,	188,	188,	187,	186,	187,	187,	188,	188,	188,	186,	185,	185,	187,	190,	188,	186,	187,	187,	187,	186,	186,	186,	187,	186,	185,	184,	184,	184,	186,	186,	185,	187,	188,	185,	186,	188,	189,	188,	186,	185,	188,	189,	189,	188,	188,	190,	191,	192,	192,	192,	191,	192,	193,	193,	188,	186,	187,	186,	185,	187,	185,	182,	180,	180,	184,	186,	184,	183,	182,	183,	182,	178,	176,	177,	180,	187,	197,	209,	222,	237,	236,	227,	214,	201,	197,	192,	189,	189,	191,	188,	183,	180,	181,	179,	182,	186,	185,	183,	183,	182,	183,	184,	185,	184,	184,	183,	181,	182,	184,	184,	184,	186,	185,	186,	185,	185,	188,	190,	187,	184,	186,	187,	186,	187,	186,	190,	192,	190,	190,	190,	189,	188,	192,	196,	194,	192,	196,	198,	199,	198,	198,	198,	199,	199,	197,	196,	194,	192,	190,	191,	192,	191,	188,	190,	191,	188,	187,	189,	189,	188,	190,	188,	186,	189,	190,	192,	186,	187,	187,	186,	187,	189,	190,	190,	189,	191,	190,	188,	189,	188,	187,	188,	188,	189,	190,	189,	187,	187,	190,	189,	188,	189,	187,	187,	189,	190,	188,	186,	190,	192,	190,	191,	193,	192,	190,	192,	191,	192,	191,	194,	197,	196,	195,	197,	197,	197,	195,	193,	197,	197,	192,	193,	190,	187,	188,	191,	191,	188,	189,	188,	187,	187,	186,	185,	187,	186,	184,	183,	184,	185,	188,	199,	211,	223,	237,	245,	238,	222,	209,	203,	200,	198,	196,	193,	191,	189,	187,	188,	187,	185,	186,	187,	187,	189,	185,	186,	187,	187,	189,	187,	187,	188,	186,	184,	188,	187,	185,	185,	188,	187,	185,	188,	188,	188,	187,	186,	188,	189,	188,	190,	192,	192,	192,	193,	195,	195,	193,	194,	196,	199,	200,	197,	197,	197,	199,	199,	197,	197,	198,	196,	194,	192,	191,	191,	191,	191,	189,	188,	187,	188,	189,	190,	189,	187,	186,	187,	188,	186,	188,	188,	185,	186,	189,	190,	186,	183,	187,	186,	186,	186,	188,	190,	188,	188,	190,	191,	186,	183,	187,	186,	186,	186,	184,	185,	187,	186,	186,	183,	184,	188,	190,	187,	183,	186,	186,	186,	187,	188,	188,	189,	191,	194,	193,	193,	194,	194,	193,	192,	195,	196,	197,	198,	196,	192,	190,	190,	190,	189,	186,	184,	187,	188,	185,	184,	186,	185,	185,	187,	183,	183,	182,	179,	180,	183,	186,	200,	212,	224,	239,	241,	230,	215,	207,	203,	198,	194,	192,	194,	193,	190,	189,	188,	189,	189,	189,	187,	187,	190,	190,	191,	190,	189,	188,	189,	188,	190,	191,	189,	188,	191,	190,	191,	193,	192,	188,	192,	193,	194,	195,	192,	193,	194,	195,	195,	196,	196,	196,	196,	197,	197,	199,	202,	203,	201,	201,	201,	203,	205,	206,	207,	207,	206,	204,	200,	201,	202,	200,	196,	196,	198,	199,	199,	194,	191,	193,	195,	198,	198,	196,	193,	194,	195,	192,	190,	192,	194,	195,	195,	195,	194,	193,	193,	194,	195,	194,	192,	190,	189,	191,	198,	202,	204,	202,	193,	186,	182,	184,	188,	189,	188,	189,	192,	193,	191,	193,	195,	196,	194,	194,	195,	196,	200,	199,	199,	198,	199,	199,	197,	197,	198,	197,	194,	197,	200,	199,	198,	199,	199,	198,	200,	202,	201,	203,	204,	206,	210,	211,	210,	212,	215,	214,	212,	212,	216,	219,	216,	213,	212,	211,	211,	211,	208,	205,	204,	205,	204,	201,	200,	199,	198,	197,	196,	195,	194,	193,	192,	191,	192,	193,	190,	192,	193,	192,	193,	190,	191,	193,	194,	194,	189,	187,	188,	190,	191,	188,	187,	190,	189,	189,	191,	190,	191,	190,	187,	189,	187,	188,	187,	186,	189,	190,	190,	187,	187,	183,	186,	191,	189,	187,	188,	189,	190,	188,	185,	187,	193,	191,	189,	189,	190,	189,	191,	193,	191,	188,	190,	190,	189,	190,	191,	189,	189,	190,	191,	190,	190,	190,	189,	189,	190,	188,	188,	190,	192,	191,	188,	188,	192,	193,	193,	193,	193,	189,	188,	190,	189,	190,	189,	190,	190,	191,	192,	192,	192,	193,	192,	191,	189,	191,	193,	193,	191,	193,	192,	192,	190,	189,	192,	194,	195,	192,	192,	194,	194,	196,	196,	194,	195,	194,	196,	199,	200,	198,	198,	200,	202,	200,	200,	197,	194,	192,	194,	196,	196,	193,	190,	189,	189,	193,	193,	189,	189,	191,	190,	189,	185,	183,	185,	189,	196,	209,	224,	239,	250,	243,	226,	215,	209,	203,	198,	200,	197,	190,	192,	196,	193,	190,	192,	193,	192,	191,	193,	192,	191,	190,	193,	192,	192,	192,	192,	191,	192,	193,	192,	191,	193,	193,	193,	194,	194,	193,	194,	193,	193,	195,	195,	196,	194,	195,	197,	196,	197,	198,	199,	199,	199,	202,	203,	201,	201,	202,	203,	202,	201,	202,	205,	206,	205,	201,	201,	202,	199,	197,	197,	199,	197,	193,	194,	196,	194,	190,	192,	192,	191,	190,	191,	193,	193,	194,	195,	193,	191,	190,	192,	192,	190,	192,	191,	190,	191,	192,	191,	190,	191,	190,	191,	189,	190,	191,	192,	191,	191,	191,	189,	188,	190,	189,	188,	189,	191,	190,	191,	190,	190,	192,	193,	195,	193,	192,	191,	190,	192,	197,	198,	195,	195,	196,	197,	200,	202,	198,	194,	192,	194,	191,	186,	191,	188,	188,	191,	190,	186,	185,	187,	192,	191,	183,	183,	184,	183,	182,	178,	182,	186,	194,	208,	221,	235,	244,	238,	222,	210,	203,	198,	196,	194,	193,	192,	190,	188,	188,	189,	188,	188,	188,	189,	187,	186,	186,	186,	185,	186,	190,	188,	187,	186,	189,	192,	191,	188,	188,	189,	189,	187,	189,	190,	190,	192,	192,	192,	192,	194,	193,	192,	193,	196,	196,	197,	196,	196,	197,	198,	200,	201,	199,	201,	204,	204,	203,	202,	201,	199,	200,	202,	202,	196,	191,	192,	194,	192,	193,	193,	193,	192,	191,	192,	193,	191,	189,	189,	192,	193,	192,	193,	192,	193,	193,	193,	192,	190,	188,	189,	190,	194,	195,	191,	190,	185,	184,	187,	193,	197,	189,	185,	188,	191,	191,	189,	192,	191,	191,	192,	192,	189,	188,	188,	190,	191,	193,	190,	192,	194,	193,	192,	190,	192,	195,	196,	196,	198,	199,	198,	199,	195,	194,	197,	194,	192,	190,	190,	190,
};

const int8_t ECG[1250] PROGMEM = {19,	19,	22,	20,	18,	13,	10,	5,	1,	-1,	-3,	-4,	-4,	-5,	-5,	-3,	-4,	-3,	-3,	-1,	-1,	-1,	-2,	-1,	-2,	-1,	-3,	-3,	-5,	-3,	-4,	-5,	-4,	-5,	-3,	-5,	-4,	-3,	-5,	-4,	-3,	-5,	-3,	-5,	-3,	1,	10,	11,	14,	12,	11,	8,	6,	2,	5,	1,	-3,	-6,	-8,	-7,	-8,	5,	53,	111,	118,	1,	-34,	-26,	-19,	-17,	-17,	-15,	-16,	-15,	-15,	-13,	-14,	-12,	-10,	-12,	-10,	-6,	-7,	-5,	-5,	-1,	1,	-1,	3,	8,	10,	12,	16,	19,	20,	19,	22,	17,	13,	10,	6,	2,	-1,	-3,	-5,	-1,	-4,	-3,	-5,	-4,	-5,	-1,	0,	-3,	-4,	-1,	-3,	-2,	-3,	-3,	-5,	-2,	-5,	-5,	-6,	-4,	-5,	-6,	-6,	-5,	-6,	-6,	-5,	-6,	-5,	-7,	-3,	-4,	4,	6,	9,	10,	8,	7,	5,	1,	3,	-1,	-4,	-9,	-10,	-12,	-8,	0,	42,	101,	115,	17,	-33,	-37,	-27,	-21,	-19,	-19,	-19,	-18,	-20,	-16,	-17,	-15,	-14,	-12,	-13,	-10,	-9,	-8,	-6,	-4,	-3,	0,	0,	4,	6,	10,	13,	17,	19,	20,	21,	17,	13,	8,	4,	1,	-2,	-4,	-5,	-6,	-5,	-6,	-5,	-5,	-4,	-5,	-3,	-4,	-2,	-1,	-3,	-1,	-3,	-2,	-3,	-2,	-4,	-3,	-4,	-3,	-5,	-4,	-5,	-4,	-5,	-4,	-5,	-5,	-5,	-5,	-5,	-4,	-1,	8,	10,	12,	13,	9,	10,	5,	1,	3,	4,	-3,	-5,	-8,	-8,	-8,	-1,	36,	100,	117,	27,	-31,	-26,	-20,	-17,	-19,	-17,	-17,	-16,	-17,	-15,	-14,	-14,	-13,	-11,	-10,	-11,	-8,	-7,	-5,	-5,	-1,	-1,	3,	5,	8,	10,	14,	17,	19,	20,	20,	17,	14,	9,	6,	3,	0,	-2,	-3,	-3,	-4,	-3,	-4,	-3,	-2,	-1,	-2,	-1,	-1,	-1,	-1,	-1,	-2,	-1,	-1,	-2,	-3,	-2,	-4,	-3,	-5,	-4,	-3,	-5,	-3,	-4,	-3,	-5,	-3,	-5,	-3,	-5,	1,	6,	11,	11,	13,	10,	10,	6,	3,	4,	3,	-2,	-5,	-8,	-7,	-6,	-8,	34,	99,	119,	36,	-29,	-32,	-20,	-18,	-17,	-17,	-16,	-17,	-14,	-14,	-12,	-13,	-12,	-10,	-9,	-8,	-9,	-6,	-4,	-3,	-2,	1,	3,	6,	9,	11,	14,	18,	19,	21,	19,	20,	15,	11,	6,	3,	-2,	-2,	-4,	-5,	-5,	-3,	-5,	-3,	-2,	-3,	-2,	-2,	-1,	-2,	-1,	-2,	-2,	-4,	-3,	-5,	-3,	-5,	-4,	-5,	-4,	-5,	-4,	-5,	-5,	-5,	-5,	-5,	-4,	-5,	-6,	-5,	-5,	4,	9,	11,	11,	9,	8,	6,	0,	3,	3,	-1,	-6,	-8,	-10,	-8,	-8,	21,	84,	121,	63,	-24,	-33,	-22,	-19,	-18,	-17,	-19,	-17,	-17,	-15,	-15,	-14,	-14,	-12,	-12,	-9,	-8,	-6,	-6,	-5,	-3,	-1,	1,	0,	6,	10,	11,	15,	17,	18,	20,	17,	16,	10,	5,	1,	-1,	-5,	-5,	-7,	-7,	-7,	-6,	-7,	-4,	-5,	-5,	-5,	-3,	-5,	-5,	-3,	-5,	-5,	-4,	-5,	-5,	-5,	-7,	-5,	-6,	-6,	-5,	-8,	-6,	-8,	-10,	-6,	-8,	-5,	-7,	-6,	-2,	5,	7,	6,	8,	6,	8,	5,	1,	1,	-1,	-7,	-8,	-10,	-10,	-11,	0,	38,	102,	116,	18,	-35,	-37,	-27,	-22,	-19,	-20,	-21,	-19,	-18,	-19,	-17,	-17,	-15,	-14,	-14,	-12,	-12,	-10,	-11,	-8,	-5,	-6,	-3,	-1,	3,	4,	9,	10,	15,	13,	15,	11,	8,	4,	-1,	-5,	-6,	-8,	-10,	-8,	-10,	-10,	-10,	-8,	-9,	-8,	-8,	-7,	-8,	-7,	-7,	-6,	-8,	-8,	-8,	-8,	-9,	-8,	-8,	-9,	-8,	-10,	-8,	-9,	-10,	-10,	-9,	-10,	-8,	-8,	-2,	4,	7,	8,	8,	4,	4,	0,	-3,	-1,	-3,	-8,	-11,	-14,	-14,	-12,	-1,	42,	103,	113,	6,	-37,	-32,	-24,	-23,	-22,	-22,	-22,	-22,	-20,	-21,	-19,	-19,	-17,	-17,	-14,	-14,	-12,	-11,	-10,	-8,	-6,	-4,	-2,	1,	4,	7,	10,	13,	13,	15,	13,	13,	8,	4,	-1,	-3,	-7,	-8,	-10,	-9,	-10,	-9,	-8,	-9,	-8,	-8,	-6,	-7,	-5,	-6,	-5,	-6,	-5,	-7,	-6,	-8,	-6,	-8,	-8,	-8,	-7,	-8,	-8,	-8,	-8,	-8,	-8,	-8,	-8,	-8,	-8,	2,	6,	8,	8,	5,	5,	3,	-3,	0,	-1,	-5,	-8,	-12,	-13,	-11,	-9,	22,	86,	115,	45,	-30,	-35,	-24,	-21,	-21,	-21,	-21,	-20,	-19,	-18,	-17,	-16,	-17,	-14,	-15,	-13,	-12,	-10,	-8,	-6,	-5,	-1,	0,	3,	5,	9,	11,	15,	17,	18,	19,	17,	13,	10,	5,	0,	-2,	-4,	-5,	-6,	-5,	-6,	-5,	-6,	-5,	-5,	-4,	-5,	-4,	-5,	-4,	-3,	-4,	-3,	-5,	-4,	-5,	-5,	-6,	-6,	-6,	-5,	-5,	-5,	-6,	-6,	-6,	-5,	-6,	-5,	-4,	3,	7,	10,	11,	9,	8,	6,	1,	-1,	2,	-3,	-5,	-9,	-9,	-10,	-9,	13,	74,	117,	76,	-19,	-33,	-25,	-19,	-20,	-19,	-19,	-18,	-18,	-17,	-16,	-15,	-14,	-14,	-13,	-12,	-10,	-8,	-6,	-6,	-4,	-2,	1,	3,	6,	8,	13,	14,	18,	19,	20,	17,	16,	11,	7,	3,	0,	-3,	-5,	-5,	-5,	-5,	-6,	-5,	-5,	-3,	-4,	-1,	-3,	-2,	-3,	-3,	-5,	-5,	-5,	-5,	-6,	-6,	-7,	-8,	-6,	-7,	-8,	-8,	-7,	-8,	-5,	-8,	-8,	-8,	-6,	0,	10,	8,	11,	8,	8,	5,	3,	-1,	2,	-3,	-5,	-8,	-10,	-10,	-8,	10,	62,	113,	84,	-14,	-37,	-27,	-20,	-19,	-19,	-17,	-17,	-15,	-16,	-15,	-15,	-11,	-14,	-12,	-11,	-8,	-10,	-6,	-4,	-4,	-2,	-1,	1,	6,	8,	11,	13,	15,	19,	20,	16,	13,	10,	4,	3,	-2,	-1,	-5,	-6,	-5,	-3,	-6,	-5,	-5,	-5,	-3,	-5,	-3,	-3,	-3,	-1,	-5,	-4,	-3,	-4,	-3,	-5,	-5,	-6,	-3,	-5,	-6,	-5,	-7,	-5,	-6,	-6,	-6,	-8,	-6,	-5,	-8,	-5,	-3,	0,	-5,	-4,	-5,	-3,	16,	70,	118,	119,	-6,	-30,	-26,	-16,	-14,	-12,	-14,	-13,	-12,	-11,	-10,	-12,	-9,	-8,	-7,	-8,	-6,	-6,	-3,	-3,	-1,	1,	3,	4,	8,	10,	15,	17,	20,	21,	22,	20,	16,	11,	7,	2,	-1,	-4,	-5,	-5,	-6,	-5,	-6,	-5,	-5,	-3,	-5,	-3,	-4,	-2,	-3,	-2,	-3,	-3,	-4,	-2,	-4,	-5,	-4,	-5,	-5,	-5,	-6,	-5,	-4,	-6,	-5,	-6,	-5,	-6,	-5,	-6,	-5,	-6,	-5,	-5,	-4,	-5,	1,	8,	11,	11,	12,	9,	8,	4,	1,	3,	1,	-5,	-8,	-9,	-10,	-8,	15,	76,	118,	75,	-18,	-32,	-25,	-19,	-19,	-19,	-19,	-17,	-17,	-17,	-16,	-15,	-14,	-13,	-12,	-12,	-10,	-9,	-7,	-6,	-4,	-2,	0,	2,	6,	8,	12,	14,	17,	18,	20,	17,	17,	13,	8,	3,	0,	-3,	-4,	-5,	-4,	-5,	-5,	-4,	-5,	-4,	-5,	-3,	-4,	-2,	-3,	-2,	-3,	-2,	-4,	-3,	-5,	-4,	-5,	-5,	-6,	-6,	-5,	-6,	-5,	-5,	-5,	-6,	-5,	-7,	-6,	-4,	3,	8,	11,	11,	9,	8,	6,	-1,	-1,	2,	-2,	-6,	-9,	-10,	-8,	-8,	14,	74,	118,	74,	-20,	-33,	-24,	-18,	-19,	-18,	-19,	-16,	-17,	-16,	-16,	-14,	-14,	-12,	-13,	-11,	-10,	-8,	-6,	-7,	-5,	-2,	1,	4,	6,	8,	11,	14,	17,	17,	20,	17,	15,	10,	6,	1,	-1,	-4,	-5,	-6,	-5,	-6,	-6,	-5,	-5,	-5,	-4,	-3,	-5,	-3,	-5,	-4,	-5,	-3,	-5,	-5,	-6,	-6,	-8,	-6,	-8,	-6,	-8,	-6,	-8,	-6,	-6,	-8,	-8,	-8,	-8,	-5,	1,	6,	8,	8,	4,	4,	4,	-5,	-2,	-1,
};

Antirrebotes botonAntirrebotespin3(3); // Crea una instancia de la clase Antirrebotes para el pin 2
Antirrebotes botonAntirrebotespin4(4);
Antirrebotes botonAntirrebotespin5(5);


void setup(){
  Serial.begin(9600);
  Serial.println(0);
}

void loop() {
  int16_t currentIndex = 0;
  bool exitLoop = false;

  while (!exitLoop) {
    if (botonAntirrebotespin3.estadoBoton()) {
      Serial.println("A");
      while (currentIndex < 1250 && !exitLoop) {
        int8_t value = pgm_read_byte_near(ABP + currentIndex);
        Serial.println(value); // Envía el valor como un número entero
        delay(1);
        currentIndex = currentIndex + 8;

        // Verificar si se presionó otro botón para salir del bucle
        exitLoop = botonAntirrebotespin4.estadoBoton() || botonAntirrebotespin5.estadoBoton();
        delay(90);
      }
    }

    if (botonAntirrebotespin4.estadoBoton()) {
      Serial.println("B");
      while (currentIndex < 2570 && !exitLoop) {
        int8_t value = pgm_read_byte_near(Arritmia + currentIndex);
        Serial.println(value); // Envía el valor como un número entero
        delay(1);
        currentIndex = currentIndex + 8;

        // Verificar si se presionó otro botón para salir del bucle
        exitLoop = botonAntirrebotespin3.estadoBoton() || botonAntirrebotespin5.estadoBoton();
        delay(90);
      }
    }

    if (botonAntirrebotespin5.estadoBoton()) {
      Serial.println("C");
      while (currentIndex < 1250 && !exitLoop) {
        int8_t value = pgm_read_byte_near(ECG + currentIndex);
        Serial.println(value); // Envía el valor como un número entero
        delay(1);
        currentIndex = currentIndex + 8;

        // Verificar si se presionó otro botón para salir del bucle
        exitLoop = botonAntirrebotespin3.estadoBoton() || botonAntirrebotespin4.estadoBoton();
        delay(90);
      }
    }
  }
}
